
@{
    ViewBag.Title = "ScreenO";
}

<div class="screen-o">
    <div class="content"></div>
</div>

<style>
    @@keyframes FromTopLeft {
        0% {top: -1000px;left: -1000px; opacity: 0;}
        10% {top: 0;left: 0; opacity: 1;}        
        95% {opacity: 1;}
        100% {opacity: 0;}
    }
    .screen-o .content {
        opacity: 0;
        position: relative;
    }
    .animate .screen-o .content {
        animation: FromTopLeft 22s;
    }
</style>


@section scripts
{
    <script>
        jQuery(document).ready(function ($) {
            "use strict";
            var topic = window.channels.ScreenO;
            var websocket = window.channels.Websocket;
            var ajaxContent = window.config.ajaxScreenOcontent;
            var client = mqtt.connect(websocket);

            client.on("message", function(topic, payload) {
                var o = JSON.parse(payload.toString());
                var articleId = o.articleId;
                var voteId = o.voteId;
                var ajaxUrl = ajaxContent + '/?articleId=' + articleId + '&voteId=' + voteId;
                $(document.body).StartCssAnimation("animate");
                $(".screen-o .content").load(ajaxUrl,function(){
                  createPie(".pieID.legend", ".pieID.pie");
                });
            });

            client.subscribe(topic);
        });
    </script>
    <script>
        function sliceSize(dataNum, dataTotal) {
            return (dataNum / dataTotal) * 360;
        }

        function addSlice(sliceSize, pieElement, offset, sliceID, color) {
            $(pieElement).append("<div class='slice " + sliceID + "'><span></span></div>");
            var offset = offset - 1;
            var sizeRotation = -179 + sliceSize;
            $("." + sliceID).css({
                "transform": "rotate(" + offset + "deg) translate3d(0,0,0)"
            });
            $("." + sliceID + " span").css({
                "transform": "rotate(" + sizeRotation + "deg) translate3d(0,0,0)",
                "background-color": color
            });
        }

        function iterateSlices(sliceSize, pieElement, offset, dataCount, sliceCount, color) {
            var sliceID = "s" + dataCount + "-" + sliceCount;
            var maxSize = 179;
            if (sliceSize <= maxSize) {
                addSlice(sliceSize, pieElement, offset, sliceID, color);
            } else {
                addSlice(maxSize, pieElement, offset, sliceID, color);
                iterateSlices(sliceSize - maxSize, pieElement, offset + maxSize, dataCount, sliceCount + 1, color);
            }
        }

        function createPie(dataElement, pieElement) {
            var listData = [];
            $(dataElement + " span").each(function() {
                listData.push(Number($(this).html()));
            });
            var listTotal = 0;
            for (var i = 0; i < listData.length; i++) {
                listTotal += listData[i];
            }
            var offset = 0;
            var color = [
                "green",
                "red"
            ];
            for (var i = 0; i < listData.length; i++) {
                var size = sliceSize(listData[i], listTotal);
                iterateSlices(size, pieElement, offset, i, 0, color[i]);
                $(dataElement + " li:nth-child(" + (i + 1) + ")").css("border-color", color[i]);
                offset += size;
            }
        }


    </script>
}